@using SMSClient.Constants;

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>SpiralSkool</title>
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />

    @* Uncomment to use the HtmlEditor control *@
    @* <script src="https://unpkg.com/devextreme-quill@23_1/dist/dx-quill.min.js"></script> *@

    @* Uncomment to use the Gantt control *@
    @*<link href="~/css/devextreme/dx-gantt.css" rel="stylesheet" />*@

    @* Uncomment to use the Diagram control *@
    @*<link href="~/css/devextreme/dx-diagram.css" rel="stylesheet" />*@

    @* Custom theme with a color swatch *@
    <link rel="stylesheet" href="https://cdn3.devexpress.com/jslib/23.2.3/css/dx.light.css">
    @* Docs: https://js.devexpress.com/DevExtreme/Guide/Themes_and_Styles/Predefined_Themes/#Color_Swatches *@

    <link href="~/css/devextreme/theme.base.css" rel="stylesheet" />
    <link href="~/css/devextreme/theme.additional.css" rel="stylesheet" />
    <link href="~/css/devextreme/dx.material.teal.light.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/7.1.0/mdb.min.css"
          rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

    @* Uncomment to use the Gantt control *@
    @*<script src="~/js/devextreme/dx-gantt.js"></script>*@

    @* Uncomment to use the Diagram control *@
    @*<script src="~/js/devextreme/dx-diagram.js"></script>*@

    <script src="~/js/devextreme/jquery.js"></script>
    <script src="~/js/notify.min.js"></script>

    @* Uncomment to use Globalize for localization *@
    @* Docs: https://docs.devexpress.com/AspNetCore/400577#globalize *@
    @*<script src="~/js/devextreme/cldr.js"></script>*@
    @*<script src="~/js/devextreme/cldr/event.js"></script>*@
    @*<script src="~/js/devextreme/cldr/supplemental.js"></script>*@
    @*<script src="~/js/devextreme/cldr/unresolved.js"></script>*@
    @*<script src="~/js/devextreme/globalize.js"></script>*@
    @*<script src="~/js/devextreme/globalize/message.js"></script>*@
    @*<script src="~/js/devextreme/globalize/number.js"></script>*@
    @*<script src="~/js/devextreme/globalize/currency.js"></script>*@
    @*<script src="~/js/devextreme/globalize/date.js"></script>*@

    @* Uncomment to enable client-side export *@
    @*<script src="~/js/devextreme/jszip.js"></script>*@

    <script src="~/js/devextreme/dx.all.js"></script>

    @* Uncomment to provide geo-data for the VectorMap control *@
    @* Docs: https://js.devexpress.com/DevExtreme/Guide/Widgets/VectorMap/Providing_Data/#Data_for_Areas *@
    @*<script src="~/js/devextreme/vectormap-data/world.js"></script>*@

    <script src="~/js/devextreme/aspnet/dx.aspnet.mvc.js"></script>
    <script src="~/js/devextreme/aspnet/dx.aspnet.data.js"></script>
     @*<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>*@
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

    <script async defer src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js"></script>
    <script type="text/javascript"
            src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/7.1.0/mdb.umd.min.js"></script>

    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
          rel="stylesheet" />
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
          rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/7.1.0/mdb.min.css"
          rel="stylesheet" />
    <link rel="stylesheet" href="~/css/Site.css" />
</head>

<body class="dx-viewport">
    @*<div id="app-side-nav-outer-toolbar">
        <div class="layout-header">
            @(Html.DevExtreme().Toolbar()
                .Items(items =>
                {
                    items.Add()
                    .Widget(w => w
                    .Button()
                    .Icon("menu")
                    .OnClick("Test.onMenuButtonClick")
                    )
                    .Location(ToolbarItemLocation.Before)
                    .CssClass("menu-button");
                    items.Add()
                    .Html("<div>SpiralSkool</div>")
                    .Location(ToolbarItemLocation.Before)
                    .CssClass("header-title");
                })
                )
        </div>
        <div class="layout-body layout-body-hidden">
            @(Html.DevExtreme().Drawer()
                .ID("layout-drawer")
                .Position(DrawerPosition.Left)
                .Opened(new JS("Test.restoreDrawerOpened()"))
                .Content(@<text>
                    <div id="layout-drawer-scrollview" class="with-footer">
                        <div class="content" style="padding: 20px">
                            @RenderBody()
                        </div>
                    </div>
                </text>)
                .Template(new TemplateName("navigation-menu"))
                )
        </div>
    </div>

    @using (Html.DevExtreme().NamedTemplate("navigation-menu"))
    {
        <div class="menu-container dx-swatch-additional">

            @functions {
            string GetUrl(string action, string controller = "Home") => Url.Action(action, controller);
            string GetCurrentUrl() => Url.Action(ViewContext.RouteData.Values["action"].ToString());
            bool IsCurrentUrl(string pageName, string controllerName = "Home") => GetUrl(pageName, controllerName) == GetCurrentUrl();
        }

        @(
                Html.DevExtreme().TreeView()
                .Items(items =>
                {
                    items.Add()
                    .Text("Home")
                    .Icon("home")
                    .Option("path", GetUrl("Index"))
                    .Selected(IsCurrentUrl("Index"));

                    items.Add()
                    .Text("Roles")
                    .Icon("user")
                    .Option("path", GetUrl("Index", "Roles"))
                    .Selected(IsCurrentUrl("Index", "Roles"))
                    .Items(items =>
                    {
                        items.Add().Text("Create a Role")
                        .Option("path", GetUrl("Create", "Roles"));
                    });

                    items.Add()
                    .Text("Users")
                    .Icon("user")
                    .Option("path", GetUrl("Index", "Users"))
                    .Selected(IsCurrentUrl("Index", "Users"))
                    .Items(items =>
                    {
                        items.Add().Text("Create a User")
                        .Option("path", GetUrl("Create", "Users"));
                    });

                    items.Add()
                    .Text("Departments")
                    .Icon("mergecells")
                    .Option("path", GetUrl("Index", "Departments"))
                    .Selected(IsCurrentUrl("Index", "Departments"))
                    .Items(items =>
                    {
                        items.Add().Text("Create a Department")
                    .Option("path", GetUrl("Create", "Departments"));
                    });

                    items.Add()
                    .Text("Courses")
                    .Icon("description")
                    .Option("path", GetUrl("Index", "Courses"))
                    .Selected(IsCurrentUrl("Index", "Courses"))
                    .Items(items =>
                    {
                        items.Add().Text("Create a Course")
                    .Option("path", GetUrl("Create", "Courses"));
                    });

                    items.Add()
                    .Text("Students")
                    .Icon("runner")
                    .Option("path", GetUrl("Index", "Students"))
                    .Selected(IsCurrentUrl("Index", "Students"))
                    .Items(items =>
                    {
                        items.Add().Text("Create a Student")
                    .Option("path", GetUrl("Create", "Students"));
                    });
                })
                .ExpandEvent(TreeViewExpandEvent.Click)
                .SelectionMode(NavSelectionMode.Single)
                .SelectedExpr("selected")
                .FocusStateEnabled(false)
                .Width(250)
                .OnItemClick("Test.onTreeViewItemClick")
                )

        </div>
    }
    *@

    <div class="container-fluid">
        <div class="row flex-nowrap">
            <div class="col-auto col-md-3 col-xl-2 px-sm-2 px-0 bg-dark">
                <div class="d-flex flex-column align-items-center align-items-sm-start px-3 pt-2 text-white min-vh-100">
                    <a class="d-flex align-items-center pb-3 mb-md-0 me-md-auto text-white text-decoration-none">
                        <span class="fs-5 d-none d-sm-inline">Menu</span>
                    </a>
                    <ul class="nav nav-pills flex-column mb-sm-auto mb-0 align-items-center align-items-sm-start" id="menu">
                        <li class="nav-item">
                            <a asp-action="Index" asp-controller="Home" class="nav-link align-middle px-0">
                                <i class="fs-4 bi-house"></i> <span class="ms-1 d-none d-sm-inline">Home</span>
                            </a>
                        </li>
                        <li>
                            <a asp-hasanyaccessmodule="@Modules.Role" href="#rolesMenu" data-bs-toggle="collapse" class="nav-link px-0 align-middle">
                                <i class="fs-4 bi-speedometer2"></i> <span class="ms-1 d-none d-sm-inline">Roles</span>
                            </a>
                            <ul class="collapse nav flex-column ms-1" id="rolesMenu" data-bs-parent="#menu">
                                <li class="w-100">
                                    <a asp-accesslevel="@AccessLevels.View" asp-module="@Modules.Role" asp-action="Index" asp-controller="Roles" class="nav-link px-0"> <span class="d-none d-sm-inline">View Roles</span> 1 </a>
                                </li>
                            </ul>
                        </li>
                        <li>
                            <a asp-hasanyaccessmodule="@Modules.User" href="#usersMenu" data-bs-toggle="collapse" class="nav-link px-0 align-middle">
                                <i class="fs-4 bi-speedometer2"></i> <span class="ms-1 d-none d-sm-inline">Users</span>
                            </a>
                            <ul class="collapse nav flex-column ms-1" id="usersMenu" data-bs-parent="#menu">
                                <li class="w-100">
                                    <a asp-accesslevel="@AccessLevels.View" asp-module="@Modules.User" asp-action="Index" asp-controller="Users" class="nav-link px-0"> <span class="d-none d-sm-inline">View Users</span> 1 </a>
                                </li>
                            </ul>
                        </li>
                        <li>
                            <a asp-hasanyaccessmodule="@Modules.Department" href="#departmentMenu" data-bs-toggle="collapse" class="nav-link px-0 align-middle">
                                <i class="fs-4 bi-speedometer2"></i> <span class="ms-1 d-none d-sm-inline">Departments</span>
                            </a>
                            <ul class="collapse nav flex-column ms-1" id="departmentMenu" data-bs-parent="#menu">
                                <li class="w-100">
                                    <a asp-accesslevel="@AccessLevels.View" asp-module="@Modules.Department" asp-action="Index" asp-controller="Departments" class="nav-link px-0"> <span class="d-none d-sm-inline">View Department</span> 1 </a>
                                </li>
                            </ul>
                        </li>
                        <li>
                            <a asp-hasanyaccessmodule="@Modules.Semester" href="#semesterMenu" data-bs-toggle="collapse" class="nav-link px-0 align-middle">
                                <i class="fs-4 bi-speedometer2"></i> <span class="ms-1 d-none d-sm-inline">Semesters</span>
                            </a>
                            <ul class="collapse nav flex-column ms-1" id="semesterMenu" data-bs-parent="#menu">
                                <li class="w-100">
                                    <a asp-accesslevel="@AccessLevels.View" asp-module="@Modules.Semester" asp-action="Index" asp-controller="Semesters" class="nav-link px-0"> <span class="d-none d-sm-inline">View Semester</span> 1 </a>
                                </li>
                            </ul>
                        </li>
                        <li>
                            <a asp-hasanyaccessmodule="@Modules.Course" href="#coursesMenu" data-bs-toggle="collapse" class="nav-link px-0 align-middle">
                                <i class="fs-4 bi-speedometer2"></i> <span class="ms-1 d-none d-sm-inline">Courses</span>
                            </a>
                            <ul class="collapse nav flex-column ms-1" id="coursesMenu" data-bs-parent="#menu">
                                <li class="w-100">
                                    <a asp-accesslevel="@AccessLevels.View" asp-module="@Modules.Course" asp-action="Index" asp-controller="Courses" class="nav-link px-0"> <span class="d-none d-sm-inline">View Courses</span> 1 </a>
                                </li>
                            </ul>
                        </li>
                        <li>
                            <a asp-hasanyaccessmodule="@Modules.Student" href="#studentsMenu" data-bs-toggle="collapse" class="nav-link px-0 align-middle">
                                <i class="fs-4 bi-speedometer2"></i> <span class="ms-1 d-none d-sm-inline">Students</span>
                            </a>
                            <ul class="collapse nav flex-column ms-1" id="studentsMenu" data-bs-parent="#menu">
                                <li class="w-100">
                                    <a asp-accesslevel="@AccessLevels.View" asp-module="@Modules.Student" asp-action="Index" asp-controller="Students" class="nav-link px-0"> <span class="d-none d-sm-inline">View Students</span> 1 </a>
                                </li>
                            </ul>
                        </li>
                    </ul>
                    <hr>
                    <div class="dropdown pb-4">
                        <a href="#" class="d-flex align-items-center text-white text-decoration-none dropdown-toggle" id="dropdownUser1" data-bs-toggle="dropdown" aria-expanded="false">
                            <div style="height:30px; width: 30px; background: gray" class="rounded-circle"></div>
                            <span class="d-none d-sm-inline mx-1">@User.Identity.Name</span>
                        </a>
                        <ul class="dropdown-menu dropdown-menu-dark text-small shadow" aria-labelledby="dropdownUser1">
                            <li><a asp-action="LogOut" asp-controller="Home" class="dropdown-item">Sign out</a></li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="col py-3">
                @RenderBody()
            </div>
        </div>
    </div>

    
    <script>


        // var Test = (function () {

        //     var DRAWER_OPENED_KEY = "Test-drawer-opened";

        //     var breakpoints = {
        //         xSmallMedia: window.matchMedia("(max-width: 599.99px)"),
        //         smallMedia: window.matchMedia("(min-width: 600px) and (max-width: 959.99px)"),
        //         mediumMedia: window.matchMedia("(min-width: 960px) and (max-width: 1279.99px)"),
        //         largeMedia: window.matchMedia("(min-width: 1280px)")
        //     };

        //     function getDrawer() {
        //         return $("#layout-drawer").dxDrawer("instance");
        //     }

        //     function restoreDrawerOpened() {
        //         var isLarge = breakpoints.largeMedia.matches;
        //         if (!isLarge)
        //             return false;

        //         var state = sessionStorage.getItem(DRAWER_OPENED_KEY);
        //         if (state === null)
        //             return isLarge;

        //         return state === "true";
        //     }

        //     function saveDrawerOpened() {
        //         sessionStorage.setItem(DRAWER_OPENED_KEY, getDrawer().option("opened"));
        //     }

        //     function updateDrawer() {
        //         var isXSmall = breakpoints.xSmallMedia.matches,
        //             isLarge = breakpoints.largeMedia.matches;

        //         getDrawer().option({
        //             openedStateMode: isLarge ? "shrink" : "overlap",
        //             revealMode: isXSmall ? "slide" : "expand",
        //             minSize: isXSmall ? 0 : 60,
        //             shading: !isLarge,
        //         });
        //     }

        //     function init() {
        //         $("#layout-drawer-scrollview").dxScrollView({ direction: "vertical", useNative: true });

        //         $.each(breakpoints, function (_, size) {
        //             size.addListener(function (e) {
        //                 if (e.matches)
        //                     updateDrawer();
        //             });
        //         });

        //         updateDrawer();

        //         $('.layout-body').removeClass('layout-body-hidden');
        //     }

        //     function navigate(url, delay) {
        //         if (url)
        //             setTimeout(function () { location.href = url }, delay);
        //     }

        //     function onMenuButtonClick() {
        //         getDrawer().toggle();
        //         saveDrawerOpened();
        //     }

        //     function onTreeViewItemClick(e) {
        //         var drawer = getDrawer();
        //         var savedOpened = restoreDrawerOpened();
        //         var actualOpened = drawer.option("opened");

        //         if (!actualOpened) {
        //             drawer.show();
        //         } else {
        //             var willHide = !savedOpened || !breakpoints.largeMedia.matches;
        //             var willNavigate = !e.itemData.selected;

        //             if (willHide)
        //                 drawer.hide();

        //             if (willNavigate)
        //                 navigate(e.itemData.path, willHide ? 400 : 0);
        //         }
        //     }

        //     return {
        //         init: init,
        //         restoreDrawerOpened: restoreDrawerOpened,
        //         onMenuButtonClick: onMenuButtonClick,
        //         onTreeViewItemClick: onTreeViewItemClick
        //     };
        // })();

        // document.addEventListener("DOMContentLoaded", function documentReady() {
        //     this.removeEventListener("DOMContentLoaded", documentReady);
        //     Test.init();
        // });
    </script>

</body>

</html>
